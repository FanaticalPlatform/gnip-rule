{"name":"Gnip-rule","tagline":"Ruby library for working with the Gnip Rules API","body":"This gem simplifies the effort to add/delete/list rules using the [Gnip Rules API](http://support.gnip.com/apis/powertrack/api_reference.html). It handles HTTP request/response and helps your rules conform to Gnip's restrictions.\r\n\r\n## Install it\r\n`gem install gnip-rule` or add the following to your `Gemfile`:\r\n\r\n```ruby\r\ngem 'gnip-rule', '~> 0.4.2'\r\n```\r\n\r\n## Use it\r\n```ruby\r\nrequire 'gnip-rule'\r\n\r\nrules = GnipRule::Client.new(API_URL, USERNAME, PASSWORD)\r\n\r\n# Add as a String, Rule, or Array of either\r\nrules.add('foo')\r\nrules.add('bar', 'tag')\r\nrules.add(['foo', 'bar', 'baz'], 'tag')\r\nrules.add(GnipRule::Rule.new('value', 'tag'))\r\nrules.add([GnipRule::Rule.new('foo', 'bar'), GnipRule::Rule.new('baz', 'tag2')])\r\n\r\n# Same with delete\r\nrules.delete('baz', 'tag')\r\nrules.delete(['foo', 'bar'])\r\nrules.delete(GnipRule::Rule.new('value', 'tag'))\r\n\r\n# Get all rules\r\nrules_list = rules.list()\r\nrules_list.each { |rule| rule.valid? }\r\njsonified = rules_list.map { |rule| rule.as_json `}\r\nrules_tagged_foo = rules_list.select { |rule| rule.tag == 'foo' }\r\n```\r\n\r\n## Compatibility\r\nThis gem is tested to be compatible with:\r\n\r\n * MRI 1.8.7, 1.9.x, 2.0.x\r\n * JRuby 1.6.x, 1.7.x\r\n * Rubinius 2.0.x\r\n\r\n## License\r\nLicenced under the [MIT License](http://www.opensource.org/licenses/mit-license.php)","google":"UA-34997412-2","note":"Don't delete this file! It's used internally to help with page regeneration."}